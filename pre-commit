#!/bin/node

const fs = require('fs');
const DOMParser = require('xmldom').DOMParser;
const exec = require('child_process').exec;

let parser;
let xmlDoc;
let widget;
let version;
let newVersion;

let firstDigit;
let secondDigit;
let thirdDigit;

let filePath = 'config.xml';

fs.readFile(filePath, 'utf-8', (err, data) => {
	if (err) {
		console.log('cannot push error', err);

		// is BAD
		process.exit(1);
	} else {
		xmlDoc = new DOMParser().parseFromString(data, 'text/xml');

		version = xmlDoc.documentElement.getAttribute('version');

		firstDigit = parseInt(version[0]);
		secondDigit = parseInt(version[2]);
		thirdDigit = parseInt(version[4]);

		if (thirdDigit !== 99) {
			thirdDigit += 1;
		} else if (secondDigit !== 9 && thirdDigit === 99) {
			thirdDigit = 0;
			secondDigit += 1;
		} else if (firstDigit !== 9 && secondDigit === 9 && thirdDigit === 99) {
			secondDigit = '0';
			firstDigit += 1;
		} else if (firstDigit === 9) {
			console.log('out of range');

			process.exit(1);
		}

		newVersion = `${firstDigit}.${secondDigit}.${thirdDigit}`;

		xmlDoc.documentElement.setAttribute('version', newVersion);

		fs.writeFile(filePath, xmlDoc, (err, success) => {
			console.log('changes was written');

			commitandPush(newVersion);

			if (err) {
				console.log('error writing to file', err);

				process.exit(1);
			}
		});

	}
});

const commitandPush = (version) => {
	console.log('commit and push');

	let addFile = `git add ${filePath}`;

	exec(`${addFile}`, (error, stdout, stderr) => {
		if (error !== null) {
			console.log(`exec error ${error}`);

			process.exit(1);
		} else {
			console.log(stdout);

			process.exit(0);
		}
	});
}
